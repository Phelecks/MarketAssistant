// <auto-generated />
using System;
using BlockProcessor.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlockProcessor.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250501151138_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlockProcessor.Domain.Entities.BlockProgress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BlockNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("Chain")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Chain", "BlockNumber");

                    b.ToTable("BlockProgress", (string)null);
                });

            modelBuilder.Entity("BlockProcessor.Domain.Entities.Erc20Transfer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ContractAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TransferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(38,19)");

                    b.HasKey("Id");

                    b.HasIndex("TransferId");

                    b.ToTable("Erc20Transfer", (string)null);
                });

            modelBuilder.Entity("BlockProcessor.Domain.Entities.Erc721Transfer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ContractAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TokenId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("TransferId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TransferId");

                    b.ToTable("Erc721Transfer", (string)null);
                });

            modelBuilder.Entity("BlockProcessor.Domain.Entities.RpcUrl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("BlockOfConfirmation")
                        .HasColumnType("int");

                    b.Property<int>("Chain")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxDegreeOfParallelism")
                        .HasColumnType("int");

                    b.Property<int>("MaxNumberOfBlocksPerProcess")
                        .HasColumnType("int");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WaitInterval")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RpcUrl", (string)null);
                });

            modelBuilder.Entity("BlockProcessor.Domain.Entities.Transfer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("BlockNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("Chain")
                        .HasColumnType("int");

                    b.Property<DateTime>("ConfirmedDatetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CumulativeGasUsed")
                        .HasColumnType("decimal(38,19)");

                    b.Property<decimal>("EffectiveGasPrice")
                        .HasColumnType("decimal(38,19)");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GasUsed")
                        .HasColumnType("decimal(38,19)");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(38,19)");

                    b.HasKey("Id");

                    b.HasIndex("BlockNumber");

                    b.HasIndex("Hash", "Chain")
                        .IsUnique();

                    b.ToTable("Transfer", (string)null);
                });

            modelBuilder.Entity("BlockProcessor.Domain.Entities.WalletAddress", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Address");

                    b.HasIndex("Address")
                        .IsUnique();

                    b.ToTable("WalletAddress", (string)null);
                });

            modelBuilder.Entity("BlockProcessor.Domain.Entities.Erc20Transfer", b =>
                {
                    b.HasOne("BlockProcessor.Domain.Entities.Transfer", "Transfer")
                        .WithMany("Erc20Transfers")
                        .HasForeignKey("TransferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transfer");
                });

            modelBuilder.Entity("BlockProcessor.Domain.Entities.Erc721Transfer", b =>
                {
                    b.HasOne("BlockProcessor.Domain.Entities.Transfer", "Transfer")
                        .WithMany("Erc721Transfers")
                        .HasForeignKey("TransferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transfer");
                });

            modelBuilder.Entity("BlockProcessor.Domain.Entities.Transfer", b =>
                {
                    b.Navigation("Erc20Transfers");

                    b.Navigation("Erc721Transfers");
                });
#pragma warning restore 612, 618
        }
    }
}
